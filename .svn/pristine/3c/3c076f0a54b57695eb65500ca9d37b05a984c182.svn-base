package com.ggv.reservation.service;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;

import com.ggv.reservation.domain.ReservationVO;
import com.ggv.reservation.domain.ReservedseatVO;

import lombok.Setter;
import lombok.extern.log4j.Log4j;

@RunWith(SpringJUnit4ClassRunner.class)
@ContextConfiguration("file:src/main/webapp/WEB-INF/spring/root-context.xml")
@Log4j
public class ReservationServiceTests {
	@Setter
	@Autowired
	private ReservationServiceImpl res;
	
	@Test
	public void testMovieTitle() {
		log.info(res.movieTitle(1));
	}
	@Test
	public void testScrMovieTitleList() {
		log.info(res.movieTitleList());
	}
	@Test
	public void testScrTheaterList2() {
		res.theaterListbyMovie_pk(1).forEach(log::info);
//		상영중인 극장 목록 (영화)
	}
	@Test
	public void testScrDateList4() {
		res.dateListbyAll(2, "서울","강남").forEach(log::info);
//		상영일 목록 (영화 극장)
	}
	
	@Test
	public void testScrTimeList() {
		res.timeList(2,"서울","강남","2019/10/01").forEach(log::info);
//		상영관,시간 목록
	}
	@Test
	public void testScrPk2() {
		res.ticketList2(2,"서울","강남","2019/10/01","2관","09:00").forEach(log::info);
	}
	@Test
	public void testReservationInsert() {
		ReservationVO reservationVO = new ReservationVO();
		reservationVO.setUserid("test");
		reservationVO.setScr_pk_no(61);
		
		res.reservationInsert(reservationVO);
		
		log.info("testReservationInsert(생성된 pk번호) : "+reservationVO.getReservation_pk());
	}
	@Test
	public void testReservedseatInsert() {
		ReservedseatVO reservedseatVO = new ReservedseatVO();
		reservedseatVO.setSeat_pk_no(3);
		reservedseatVO.setScr_pk_no(61);
		reservedseatVO.setReservation_pk_no(30);
		
		res.reservedseatInsert(reservedseatVO);
		
		log.info("testReservationInsert(생성된 pk번호) : "+reservedseatVO.getReservedseat_pk());
	}
	@Test
	public void testReservedseatInsert1() {
		ReservedseatVO reservedseatVO = new ReservedseatVO();
		reservedseatVO.setSeat_pk_no(2);
		reservedseatVO.setScr_pk_no(61);
		reservedseatVO.setReservation_pk_no(30);
		
		res.reservedseatInsert(reservedseatVO);
		
		log.info("testReservationInsert(생성된 pk번호) : "+reservedseatVO.getReservedseat_pk());
	}
	
	@Test
	public void testPaymentUpdate() {
		ReservationVO reservationVO = new ReservationVO();
		reservationVO.setReservation_pk(72);
		res.paymentUpdate(reservationVO);
		
	}
	@Test
	public void testReservationList(){
		log.info(res.reservationList());
	}
}
